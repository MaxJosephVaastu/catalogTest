{"version":3,"sources":["components/LoginModal/index.js","lib/FakeAPI.js","constants/Page.js","store/page/actions.js","containers/LoginModal.js","components/EditProductModal/index.js","containers/EditProductModal.js","components/EditCategoryModal/index.js","containers/EditCategoryModal.js","components/Modals/index.js","constants/Modals.js","containers/Modals.js","components/Menu/index.js","containers/Menu.js","components/Product/index.js","containers/Product.js","components/Category/index.js","containers/Category.js","components/Catalog/index.js","containers/Catalog.js","components/App.js","containers/App.js","store/page/reducer.js","store/reducer.js","store/configure.js","index.js"],"names":["LoginModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitHandler","event","preventDefault","form","currentTarget","className","checkValidity","login","changeHandler","setState","defineProperty","target","name","value","state","password","react_default","a","createElement","Modal","show","onHide","closeModal","size","aria-labelledby","centered","Form","onSubmit","noValidate","Header","closeButton","Title","id","Body","Group","controlId","Label","Control","type","placeholder","onChange","required","Feedback","Footer","Button","React","Component","FakeAPI","init","resolve","reject","localStorage","getItem","setItem","JSON","stringify","0","price","expirationDate","category","1","2","3","4","e","message","categories","parse","goods","product","getGoods","Number","keys","length","getCategories","cats","newCatId","key","hasOwnProperty","LOGIN_REQUEST","LOGOUT","NEW_CATEGORY","NEW_PRODUCT","CLOSE_MODAL","OPEN_MODAL","SHOW_PRODUCT","SHOW_CATEGORY","GET_CATEGORIES_SUCCESS","GET_GOODS_SUCCESS","ADD_PRODUCT_SUCCESS","ADD_CATEGORY_SUCCESS","SAVE_PRODUCT_SUCCESS","SAVE_CATEGORY_SUCCESS","DEL_PRODUCT_SUCCESS","DEL_CATEGORY_SUCCESS","apiInit","createAction","loginRequest","showProduct","showCategory","openModal","logout","newCategory","newProduct","getCategoriesRequest","getCategoriesSuccess","getCategoriesFail","getGoodsRequest","getGoodsSuccess","getGoodsFail","addProdRequest","addProdSuccess","addProdFail","addCatRequest","addCatSuccess","addCatFail","saveProdRequest","saveProdSuccess","saveProdFail","saveCatRequest","saveCatSuccess","saveCatFail","delProdRequest","delProdSuccess","delProdFail","delCatRequest","delCatSuccess","delCatFail","fakeApi","initFakeApi","dispatch","error","connect","modal","page","currentProdId","EditProductModal","_this$state","dateIsValid","priceIsValid","nameIsValid","_this$state2","saveProduct","addProduct","field","dateArr","split","date","Date","getTime","_this2","_this$state3","as","Row","column","sm","Col","isInvalid","moment","now","format","Dropdown","Toggle","variant","Menu","map","Item","onClick","nextProps","prevState","prod","objectSpread","newProd","saveProd","addProd","EditCategoryModal","currentCatId","saveCategory","addCategory","pattern","cat","newCat","saveCat","addCat","Modals","containers_LoginModal","containers_EditProductModal","containers_EditCategoryModal","_this$props","Accordion","catId","Card","concat","eventKey","Collapse","style","paddingTop","paddingBottom","filter","prodId","block","textAlign","padding","isLoggedIn","Product","confirm","delProduct","editProduct","Table","striped","bordered","hover","ButtonToolbar","marginRight","showConfirm","bind","hideConfirm","del","delProd","Category","editCategory","delCategory","delCat","Catalog","Container","fluid","Navbar","bg","expand","Brand","aria-controls","Nav","Link","md","containers_Menu","containers_Product","containers_Category","containers_Modals","App","containers_Catalog","initialState","combineReducers","arguments","undefined","action","payload","devtools","window","devToolsExtension","fn","store","enhancers","applyMiddleware","reduxThunk","createLogger","diff","collapsed","maxAge","createStore","reducer","compose","apply","configureStore","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.00802b99.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass LoginModal extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        form.className += \" was-validated\";\r\n\r\n        if (form.checkValidity() === true) {\r\n            this.props.login();\r\n        }\r\n    };\r\n\r\n    changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render () {\r\n\r\n        return (\r\n            <Modal\r\n                show={this.props.show}\r\n                onHide={this.props.closeModal}\r\n                size=\"sm\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Form\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Авторизация\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                        <Form.Group controlId=\"formLogin\">\r\n                            <Form.Label>Логин</Form.Label>\r\n                            <Form.Control\r\n                                name = \"login\"\r\n                                type = \"text\"\r\n                                placeholder = \"Логин\"\r\n                                value = {this.state.login}\r\n                                onChange={this.changeHandler}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Заполните это поле\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"formPassword\">\r\n                            <Form.Label>Пароль</Form.Label>\r\n                            <Form.Control\r\n                                name = \"password\"\r\n                                type = \"password\"\r\n                                placeholder = \"Пароль\"\r\n                                value = {this.state.password}\r\n                                onChange={this.changeHandler}\r\n                                required\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Заполните это поле\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type='submit'>Войти</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginModal;\r\n","export default class FakeAPI {\r\n    constructor(){\r\n        this.init()\r\n    }\r\n\r\n    init(resolve, reject){\r\n\r\n        if (!localStorage.getItem('goods')) {\r\n\r\n\r\n            const goods = {\r\n                \"0\": {\r\n                    name: 'сыр \"Чеддар\"',\r\n                    price: '300',\r\n                    expirationDate: '20.10.2019',\r\n                    category: '1'\r\n                },\r\n                \"1\": {\r\n                    name: 'Йогурт',\r\n                    price: '60',\r\n                    expirationDate: '10.11.2019',\r\n                    category: '1'\r\n                },\r\n                \"2\": {\r\n                    name: 'Рис басмати, 1кг',\r\n                    price: '120',\r\n                    expirationDate: '20.08.2021',\r\n                    category: '2'\r\n                },\r\n            }\r\n            const categories = {\r\n                \"0\": {\r\n                    name: 'Прочее'\r\n                },\r\n                \"1\": {\r\n                    name: 'Кисломолочные продукты'\r\n                },\r\n                \"2\": {\r\n                    name: 'Крупы'\r\n                },\r\n                \"3\": {\r\n                    name: 'Макаронные изделия'\r\n                },\r\n                \"4\": {\r\n                    name: 'Растительные масла'\r\n                }\r\n            }\r\n            try {\r\n                localStorage.setItem('goods', JSON.stringify(goods));\r\n                localStorage.setItem('categories', JSON.stringify(categories));\r\n\r\n                if (typeof resolve === 'function') {\r\n                    resolve('success')\r\n                }\r\n            }\r\n            catch (e) {\r\n                if (typeof reject === 'function') {\r\n                    reject('Error in getCategories: ' + e.message);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if(typeof resolve === 'function') {\r\n                resolve('success')\r\n            }\r\n        }\r\n    }\r\n\r\n    getCategories(resolve, reject) {\r\n\r\n        try {\r\n            const categories = JSON.parse(localStorage.getItem('categories'))\r\n\r\n            if(typeof resolve === 'function') {\r\n                resolve(categories)\r\n            }\r\n        }\r\n        catch (e) {\r\n            if(typeof reject === 'function') {\r\n                reject('Error in getCategories: ' + e.message);\r\n            }\r\n        }\r\n    }\r\n\r\n    getGoods(resolve, reject) {\r\n\r\n        try {\r\n            const goods = JSON.parse(localStorage.getItem('goods'))\r\n\r\n            if(typeof resolve === 'function') {\r\n                resolve(goods)\r\n            }\r\n        }\r\n        catch (e) {\r\n            if(typeof reject === 'function') {\r\n                reject('Error in getGoods: ' + e.message);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    addProd(product, resolve, reject) {\r\n\r\n        this.getGoods((goods) => {\r\n            const id = Number(Object.keys(goods)[Object.keys(goods).length-1]) + 1;\r\n            goods[id] = product;\r\n\r\n            try{\r\n                localStorage.setItem('goods', JSON.stringify(goods));\r\n\r\n                if(typeof resolve === 'function') {\r\n                    resolve(goods)\r\n                }\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in addProd: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    addCat(category, resolve, reject) {\r\n\r\n        this.getCategories((cats) => {\r\n            const id = Number(Object.keys(cats)[Object.keys(cats).length-1]) + 1;\r\n            cats[id] = category;\r\n\r\n            try{\r\n                localStorage.setItem('categories', JSON.stringify(cats));\r\n\r\n                if(typeof resolve === 'function') {\r\n                    resolve(cats)\r\n                }\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in addCat: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    saveCat(id, category, resolve, reject) {\r\n\r\n        this.getCategories((cats) => {\r\n\r\n            cats[id] = category;\r\n\r\n            try{\r\n                localStorage.setItem('categories', JSON.stringify(cats));\r\n\r\n                if(typeof resolve === 'function') {\r\n                    resolve(cats)\r\n                }\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in saveCat: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    saveProd(id, product, resolve, reject) {\r\n\r\n        this.getGoods((goods) => {\r\n\r\n            goods[id] = product;\r\n\r\n            try{\r\n                localStorage.setItem('goods', JSON.stringify(goods));\r\n\r\n                if(typeof resolve === 'function') {\r\n                    resolve(goods)\r\n                }\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in saveProd: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    delProd(id, resolve, reject) {\r\n\r\n        this.getGoods((goods) => {\r\n\r\n            delete goods[id]\r\n\r\n            try{\r\n                localStorage.setItem('goods', JSON.stringify(goods));\r\n\r\n                if(typeof resolve === 'function') {\r\n                    resolve(goods)\r\n                }\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in delProd: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    delCat(id, resolve, reject) {\r\n\r\n        this.getCategories((cats) => {\r\n\r\n            if (Object.keys(cats).length === 1){\r\n                if(typeof reject === 'function') {\r\n                    reject('Последняя категория!')\r\n                    return\r\n                }\r\n            }\r\n\r\n            delete cats[id]\r\n\r\n            try{\r\n                localStorage.setItem('categories', JSON.stringify(cats));\r\n\r\n\r\n                this.getGoods((goods) => {\r\n\r\n                    const newCatId = Object.keys(cats)[0]\r\n\r\n                    for (var key in goods) {\r\n                        if (goods.hasOwnProperty(key)) {\r\n                            if (goods[key].category === id) goods[key].category = newCatId\r\n                        }\r\n                    }\r\n\r\n                    localStorage.setItem('goods', JSON.stringify(goods));\r\n\r\n                    if(typeof resolve === 'function') {\r\n                        resolve({cats, goods})\r\n                    }\r\n\r\n                })\r\n\r\n            }\r\n            catch (e) {\r\n                if(typeof reject === 'function') {\r\n                    reject('Error in delCat: ' + e.message);\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n}\r\n","export const API_INIT = 'API_INIT'\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGOUT = 'LOGOUT'\nexport const NEW_CATEGORY = 'NEW_CATEGORY'\nexport const NEW_PRODUCT = 'NEW_PRODUCT'\nexport const CLOSE_MODAL = 'CLOSE_MODAL'\nexport const OPEN_MODAL = 'OPEN_MODAL'\nexport const SHOW_PRODUCT = 'SHOW_PRODUCT'\nexport const SHOW_CATEGORY = 'SHOW_CATEGORY'\nexport const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST'\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS'\nexport const GET_CATEGORIES_FAIL = 'GET_CATEGORIES_FAIL'\nexport const GET_GOODS_REQUEST = 'GET_GOODS_REQUEST'\nexport const GET_GOODS_SUCCESS = 'GET_GOODS_SUCCESS'\nexport const GET_GOODS_FAIL = 'GET_GOODS_FAIL'\nexport const ADD_PRODUCT_REQUEST = 'ADD_PRODUCT_REQUEST'\nexport const ADD_PRODUCT_SUCCESS = 'ADD_PRODUCT_SUCCESS'\nexport const ADD_PRODUCT_FAIL = 'ADD_PRODUCT_FAIL'\nexport const ADD_CATEGORY_REQUEST = 'ADD_CATEGORY_REQUEST'\nexport const ADD_CATEGORY_SUCCESS = 'ADD_CATEGORY_SUCCESS'\nexport const ADD_CATEGORY_FAIL = 'ADD_CATEGORY_FAIL'\nexport const SAVE_PRODUCT_REQUEST = 'SAVE_PRODUCT_REQUEST'\nexport const SAVE_PRODUCT_SUCCESS = 'SAVE_PRODUCT_SUCCESS'\nexport const SAVE_PRODUCT_FAIL = 'SAVE_PRODUCT_FAIL'\nexport const SAVE_CATEGORY_REQUEST = 'SAVE_CATEGORY_REQUEST'\nexport const SAVE_CATEGORY_SUCCESS = 'SAVE_CATEGORY_SUCCESS'\nexport const SAVE_CATEGORY_FAIL = 'SAVE_CATEGORY_FAIL'\nexport const DEL_PRODUCT_REQUEST = 'DEL_PRODUCT_REQUEST'\nexport const DEL_PRODUCT_SUCCESS = 'DEL_PRODUCT_SUCCESS'\nexport const DEL_PRODUCT_FAIL = 'DEL_PRODUCT_FAIL'\nexport const DEL_CATEGORY_REQUEST = 'DEL_CATEGORY_REQUEST'\nexport const DEL_CATEGORY_SUCCESS = 'DEL_CATEGORY_SUCCESS'\nexport const DEL_CATEGORY_FAIL = 'DEL_CATEGORY_FAIL'\n","import {createAction} from 'redux-actions';\nimport FakeAPI from '../../lib/FakeAPI';\n\nimport {\n    API_INIT,\n    LOGIN_REQUEST,\n    SHOW_PRODUCT,\n    CLOSE_MODAL,\n    OPEN_MODAL,\n    LOGOUT,\n    NEW_CATEGORY,\n    NEW_PRODUCT,\n    SHOW_CATEGORY,\n    GET_CATEGORIES_REQUEST,\n    GET_CATEGORIES_SUCCESS,\n    GET_CATEGORIES_FAIL,\n    GET_GOODS_REQUEST,\n    GET_GOODS_SUCCESS,\n    GET_GOODS_FAIL,\n    ADD_PRODUCT_REQUEST,\n    ADD_PRODUCT_SUCCESS,\n    ADD_PRODUCT_FAIL,\n    ADD_CATEGORY_REQUEST,\n    ADD_CATEGORY_SUCCESS,\n    ADD_CATEGORY_FAIL,\n    SAVE_PRODUCT_REQUEST,\n    SAVE_PRODUCT_SUCCESS,\n    SAVE_PRODUCT_FAIL,\n    SAVE_CATEGORY_REQUEST,\n    SAVE_CATEGORY_SUCCESS,\n    SAVE_CATEGORY_FAIL,\n    DEL_PRODUCT_REQUEST,\n    DEL_PRODUCT_SUCCESS,\n    DEL_PRODUCT_FAIL,\n    DEL_CATEGORY_REQUEST,\n    DEL_CATEGORY_SUCCESS,\n    DEL_CATEGORY_FAIL,\n} from './../../constants/Page'\n\n\nexport const apiInit = createAction(API_INIT)\nexport const loginRequest = createAction(LOGIN_REQUEST)\nexport const showProduct = createAction(SHOW_PRODUCT)\nexport const showCategory = createAction(SHOW_CATEGORY)\nexport const openModal= createAction(OPEN_MODAL)\nexport const closeModal= createAction(CLOSE_MODAL)\nexport const logout= createAction(LOGOUT)\nexport const newCategory= createAction(NEW_CATEGORY)\nexport const newProduct= createAction(NEW_PRODUCT)\n\nexport const getCategoriesRequest= createAction(GET_CATEGORIES_REQUEST)\nexport const getCategoriesSuccess= createAction(GET_CATEGORIES_SUCCESS)\nexport const getCategoriesFail= createAction(GET_CATEGORIES_FAIL)\nexport const getGoodsRequest= createAction(GET_GOODS_REQUEST)\nexport const getGoodsSuccess= createAction(GET_GOODS_SUCCESS)\nexport const getGoodsFail= createAction(GET_GOODS_FAIL)\n\nexport const addProdRequest= createAction(ADD_PRODUCT_REQUEST)\nexport const addProdSuccess= createAction(ADD_PRODUCT_SUCCESS)\nexport const addProdFail= createAction(ADD_PRODUCT_FAIL)\nexport const addCatRequest= createAction(ADD_CATEGORY_REQUEST)\nexport const addCatSuccess= createAction(ADD_CATEGORY_SUCCESS)\nexport const addCatFail= createAction(ADD_CATEGORY_FAIL)\n\nexport const saveProdRequest= createAction(SAVE_PRODUCT_REQUEST)\nexport const saveProdSuccess= createAction(SAVE_PRODUCT_SUCCESS)\nexport const saveProdFail= createAction(SAVE_PRODUCT_FAIL)\nexport const saveCatRequest= createAction(SAVE_CATEGORY_REQUEST)\nexport const saveCatSuccess= createAction(SAVE_CATEGORY_SUCCESS)\nexport const saveCatFail= createAction(SAVE_CATEGORY_FAIL)\n\nexport const delProdRequest= createAction(DEL_PRODUCT_REQUEST)\nexport const delProdSuccess= createAction(DEL_PRODUCT_SUCCESS)\nexport const delProdFail= createAction(DEL_PRODUCT_FAIL)\nexport const delCatRequest= createAction(DEL_CATEGORY_REQUEST)\nexport const delCatSuccess= createAction(DEL_CATEGORY_SUCCESS)\nexport const delCatFail= createAction(DEL_CATEGORY_FAIL)\n\nconst fakeApi = new FakeAPI();\n\n\nexport function initFakeApi() {\n    return function(dispatch) {\n        fakeApi.init(() => {\n            dispatch(apiInit())\n            dispatch(getGoods())\n            dispatch(getCategories())\n        }, () => {})\n    }\n}\n\nexport function getGoods() {\n    return dispatch => {\n        dispatch(getGoodsRequest())\n        fakeApi.getGoods(goods => {\n            dispatch(getGoodsSuccess(goods))\n        }, error => {\n            dispatch(getGoodsFail(error))\n        })\n    }\n}\n\nexport function getCategories() {\n    return dispatch => {\n        dispatch(getCategoriesRequest())\n        fakeApi.getCategories(categories => {\n            dispatch(getCategoriesSuccess(categories))\n        }, error => {\n            dispatch(getCategoriesFail(error))\n        })\n    }\n}\n\nexport function addProd(prod) {\n    return dispatch => {\n        dispatch(addProdRequest())\n        fakeApi.addProd(prod, goods => {\n            dispatch(addProdSuccess(goods))\n        }, error => {\n            dispatch(addProdFail(error))\n        })\n    }\n}\n\nexport function addCat(cat) {\n    return dispatch => {\n        dispatch(addCatRequest())\n        fakeApi.addCat(cat, categories => {\n            dispatch(addCatSuccess(categories))\n        }, error => {\n            dispatch(addCatFail(error))\n        })\n    }\n}\n\nexport function saveProd(id, prod) {\n    return dispatch => {\n        dispatch(saveProdRequest())\n        fakeApi.saveProd(id, prod, goods => {\n            dispatch(saveProdSuccess(goods))\n        }, error => {\n            dispatch(saveProdFail(error))\n        })\n    }\n}\n\nexport function saveCat(id, cat) {\n    return dispatch => {\n        dispatch(saveCatRequest())\n        fakeApi.saveCat(id, cat, categories => {\n            dispatch(saveCatSuccess(categories))\n        }, error => {\n            dispatch(saveCatFail(error))\n        })\n    }\n}\nexport function delProd(id) {\n    return dispatch => {\n        dispatch(delProdRequest())\n        fakeApi.delProd(id, goods => {\n            dispatch(delProdSuccess(goods))\n        }, error => {\n            dispatch(delProdFail(error))\n        })\n    }\n}\n\nexport function delCat(id) {\n    return dispatch => {\n        dispatch(delCatRequest())\n        fakeApi.delCat(id, categories => {\n            dispatch(delCatSuccess(categories))\n        }, error => {\n            dispatch(delCatFail(error))\n        })\n    }\n}\n","import {connect} from 'react-redux'\r\nimport LoginModal from '../components/LoginModal'\r\n\r\nimport {closeModal, loginRequest} from '../store/page/actions'\r\n\r\nexport default connect(\r\n    state => ({\r\n        modal: state.page.modal,\r\n        categories: state.page.categories,\r\n        goods: state.page.goods,\r\n        currentProdId: state.page.currentProdId,\r\n    }),\r\n    dispatch => ({\r\n        closeModal: () => {\r\n            dispatch(closeModal())\r\n        },\r\n        login: () => {\r\n            dispatch(closeModal())\r\n            dispatch(loginRequest())\r\n        },\r\n    })\r\n)(LoginModal)\r\n","import React from 'react';\r\nimport moment from 'moment'\r\nimport { Modal, Button, Form, Row, Col, Dropdown } from 'react-bootstrap';\r\n\r\n\r\n\r\nclass EditProductModal extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            price: '',\r\n            expirationDate: '',\r\n            category: '',\r\n            dateIsValid: true,\r\n            priceIsValid: true,\r\n            nameIsValid: true,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (prevState.show === nextProps.show && prevState.show) return null\r\n        const prod = nextProps.currentProdId ?\r\n            nextProps.goods[nextProps.currentProdId] :\r\n            {name: '', price: '', expirationDate: moment(Date.now()).format('DD.MM.YYYY'), category: '0'}\r\n        return {\r\n            show: nextProps.show,\r\n            categories: nextProps.categories,\r\n            currentProdId: nextProps.currentProdId,\r\n            ...prod\r\n        }\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const {dateIsValid, priceIsValid, nameIsValid} = this.state\r\n        const form = event.currentTarget;\r\n        form.className += \" was-validated\";\r\n\r\n        if (nameIsValid && dateIsValid && priceIsValid) {\r\n            const {currentProdId, name, price, expirationDate, category} = this.state\r\n            if(currentProdId){\r\n                this.props.saveProduct(currentProdId, {name, price, expirationDate, category})\r\n            }\r\n            else{\r\n                this.props.addProduct({name, price, expirationDate, category})\r\n            }\r\n        }\r\n    };\r\n\r\n    changeHandler = event => {\r\n        const field = event.target.name\r\n        const value = event.target.value\r\n\r\n        switch (field) {\r\n            case 'expirationDate':\r\n                const dateArr = value.split(\".\")\r\n                if (dateArr.length<3) {\r\n                    this.setState({dateIsValid: false})\r\n                    this.setState({ [field]: value });\r\n                }\r\n                const date = new Date(dateArr[2], dateArr[1] - 1, dateArr[0])\r\n                if (new Date().getTime() >= date.getTime()) {\r\n                    this.setState({dateIsValid: false})\r\n                }\r\n                else {\r\n                    this.setState({dateIsValid: true})\r\n                }\r\n                break;\r\n            case 'price':\r\n                this.setState({priceIsValid: Number(value)>0})\r\n                break;\r\n            case 'name':\r\n                this.setState({nameIsValid: value.length >= 5 && value.length <= 40})\r\n                break;\r\n            default:\r\n        }\r\n        this.setState({ [field]: value });\r\n    };\r\n\r\n    render () {\r\n        const {\r\n            categories,\r\n            currentProdId,\r\n            category,\r\n            dateIsValid,\r\n            priceIsValid,\r\n            nameIsValid\r\n        } = this.state\r\n\r\n        return (\r\n            <Modal\r\n                show={this.state.show}\r\n                onHide={this.props.closeModal}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Form\r\n                    noValidate\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {currentProdId ? 'Редактирование карточки товара' : 'Добавление нового товара'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n\r\n                        <Form.Group as={Row} controlId=\"formName\" >\r\n                            <Form.Label column sm={4}>Наименование</Form.Label>\r\n                            <Col sm={8}>\r\n                                <Form.Control\r\n                                    name = \"name\"\r\n                                    type = \"text\"\r\n                                    value = {this.state.name}\r\n                                    onChange={this.changeHandler}\r\n                                    isInvalid={!nameIsValid}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Минимум 5 символов, максимум 40\r\n                                </Form.Control.Feedback>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formPrice\">\r\n                            <Form.Label column sm={4}>Цена</Form.Label>\r\n                            <Col sm={8}>\r\n                                <Form.Control\r\n                                    name = \"price\"\r\n                                    type = \"text\"\r\n                                    value = {this.state.price}\r\n                                    onChange={this.changeHandler}\r\n                                    isInvalid={!priceIsValid}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Цена должна быть больше 0\r\n                                </Form.Control.Feedback>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formDate\">\r\n                            <Form.Label column sm={4}>Цена</Form.Label>\r\n                            <Col sm={8}>\r\n                                <Form.Control\r\n                                    name = \"expirationDate\"\r\n                                    type = \"text\"\r\n                                    value = {this.state.expirationDate}\r\n                                    onChange={this.changeHandler}\r\n                                    isInvalid={!dateIsValid}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Дата должна быть больше, чем {moment(Date.now()).format('DD.MM.YYYY')}\r\n                                </Form.Control.Feedback>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    <Row>\r\n                        <Form.Label column sm={4}>Категория</Form.Label>\r\n                        <Col sm={8}>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"outline-secondary\" id=\"dropdown-basic\">\r\n                                    {categories && categories[category] && categories[category].name}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    {categories &&  Object.keys(categories).map(id => (\r\n                                        <Dropdown.Item key={id} onClick={() => {this.setState({category: id})}}>{categories[id].name}</Dropdown.Item>\r\n                                    ))}\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button onClick={this.submitHandler}>{currentProdId ? 'Сохранить' : 'Добавить'}</Button>\r\n                    <Button variant='light' onClick={this.props.closeModal}>Отмена</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProductModal;\r\n","import {connect} from 'react-redux'\r\nimport EditProductModal from '../components/EditProductModal'\r\n\r\nimport {closeModal, saveProd, addProd} from '../store/page/actions'\r\n\r\nexport default connect(\r\n    state => ({\r\n        modal: state.page.modal,\r\n        categories: state.page.categories,\r\n        goods: state.page.goods,\r\n        currentProdId: state.page.currentProdId,\r\n        newProd: state.page.newProd,\r\n    }),\r\n    dispatch => ({\r\n        closeModal: () => {\r\n            dispatch(closeModal())\r\n        },\r\n        saveProduct: (currentProdId, prod) => {\r\n            dispatch(closeModal())\r\n            dispatch(saveProd(currentProdId, prod))\r\n        },\r\n        addProduct: (prod) => {\r\n            dispatch(closeModal())\r\n            dispatch(addProd(prod))\r\n        },\r\n    })\r\n)(EditProductModal)\r\n","import React from 'react';\r\nimport { Modal, Button, Form, Row, Col } from 'react-bootstrap';\r\n\r\nclass EditCategoryModal extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        if (prevState.show === nextProps.show && prevState.show) return null\r\n        const cat = nextProps.currentCatId ?\r\n            nextProps.categories[nextProps.currentCatId] :\r\n            {name: ''}\r\n        return {\r\n            show: nextProps.show,\r\n            currentCatId: nextProps.currentCatId,\r\n            ...cat\r\n        }\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        form.className += \" was-validated\";\r\n\r\n        if (form.checkValidity()) {\r\n            const {name, currentCatId} = this.state\r\n            if(currentCatId){\r\n                this.props.saveCategory(currentCatId, {name});\r\n            }\r\n            else{\r\n                this.props.addCategory({name});\r\n            }\r\n        }\r\n    };\r\n\r\n    changeHandler = event => {\r\n        const field = event.target.name\r\n        const value = event.target.value\r\n\r\n        this.setState({ [field]: value })\r\n    };\r\n\r\n    render () {\r\n        const {currentCatId} = this.state\r\n\r\n        return (\r\n            <Modal\r\n                show={this.state.show}\r\n                onHide={this.props.closeModal}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Form\r\n                    onSubmit={this.submitHandler}\r\n                    noValidate\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        {currentCatId ? 'Редактирование карточки категории' : 'Добавление категории'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group as={Row} controlId=\"formName\" >\r\n                        <Form.Label column sm={4}>Наименование</Form.Label>\r\n                        <Col sm={8}>\r\n                            <Form.Control\r\n                                name = \"name\"\r\n                                type = \"text\"\r\n                                value = {this.state.name}\r\n                                onChange={this.changeHandler}\r\n                                required\r\n                                pattern=\"^([\\w\\s\\W]{5,50})$\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Минимум 5 символов, максимум 40\r\n                            </Form.Control.Feedback>\r\n                        </Col>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type='submit'>{currentCatId ? 'Сохранить' : 'Добавить'}</Button>\r\n                    <Button variant='light' onClick={this.props.closeModal}>Отмена</Button>\r\n                </Modal.Footer>\r\n            </Form>\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditCategoryModal;\r\n","import {connect} from 'react-redux'\r\nimport EditCategoryModal from '../components/EditCategoryModal'\r\n\r\nimport {closeModal, saveCat, addCat} from '../store/page/actions'\r\n\r\nexport default connect(\r\n    state => ({\r\n        categories: state.page.categories,\r\n        currentCatId: state.page.currentCatId,\r\n        newCat: state.page.newCat,\r\n    }),\r\n    dispatch => ({\r\n        closeModal: () => {\r\n            dispatch(closeModal())\r\n        },\r\n        saveCategory: (currentCatId, cat) => {\r\n            dispatch(closeModal())\r\n            dispatch(saveCat(currentCatId, cat))\r\n        },\r\n        addCategory: (cat) => {\r\n            dispatch(closeModal())\r\n            dispatch(addCat(cat))\r\n        },\r\n    })\r\n)(EditCategoryModal)\r\n","import React from 'react';\r\nimport {LOGIN_MODAL, EDIT_CATEGORY_MODAL, EDIT_PRODUCT_MODAL} from '../../constants/Modals';\r\nimport LoginModal from '../../containers/LoginModal';\r\nimport EditProductModal from '../../containers/EditProductModal';\r\nimport EditCategoryModal from '../../containers/EditCategoryModal';\r\n\r\n\r\nclass Modals extends React.Component {\r\n\r\n    render () {\r\n\r\n        const {\r\n            modal,\r\n        } = this.props\r\n\r\n        return (\r\n            <div>\r\n                <LoginModal show={modal === LOGIN_MODAL}/>\r\n                <EditProductModal show={modal === EDIT_PRODUCT_MODAL}/>\r\n                <EditCategoryModal show={modal === EDIT_CATEGORY_MODAL}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modals;\r\n","export const LOGIN_MODAL = 'LOGIN_MODAL'\nexport const EDIT_PRODUCT_MODAL = 'EDIT_PRODUCT_MODAL'\nexport const EDIT_CATEGORY_MODAL = 'EDIT_CATEGORY_MODAL'\n","import {connect} from 'react-redux'\r\nimport Modals from '../components/Modals'\r\n\r\nexport default connect(\r\n    state => ({\r\n        modal: state.page.modal,\r\n    }),\r\n    dispatch => ({\r\n    })\r\n)(Modals)\r\n","import React from 'react'\r\nimport { Accordion, Card, Button } from 'react-bootstrap';\r\n\r\n\r\nclass Menu extends React.Component {\r\n\r\n\r\n    render() {\r\n        const {\r\n            categories,\r\n            goods,\r\n            showProduct,\r\n            showCategory\r\n        } = this.props\r\n\r\n        return (\r\n            <Accordion>\r\n                {\r\n                    Object.keys(categories).map(catId => (\r\n                        <Card key = {`card${catId}`}>\r\n                            <Accordion.Toggle as={Card.Header} eventKey={catId} onClick={() => {showCategory(catId)}}>\r\n                                {categories[catId].name}\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey={catId}>\r\n                                <Card.Body style={{paddingTop: '0', paddingBottom: '12px'}}>\r\n                                    {\r\n                                        Object.keys(goods).filter(prodId => goods[prodId].category === catId)\r\n                                            .map(prodId => (\r\n                                                <Button\r\n                                                    variant=\"link\"\r\n                                                    size=\"sm\"\r\n                                                    block\r\n                                                    style={{textAlign:'left', padding: '6px 0 0 0'}}\r\n                                                    key={`card${catId}_${prodId}`}\r\n                                                    onClick={() => showProduct(prodId)}\r\n                                                >\r\n                                                {goods[prodId].name}\r\n                                                </Button>\r\n                                            ))\r\n                                    }\r\n                                    {\r\n                                        Object.keys(goods).filter(prodId => goods[prodId].category === catId).length === 0 && <div>В этой категории нет товаров</div>\r\n                                    }\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                        )\r\n\r\n                    )\r\n                }\r\n            </Accordion>\r\n        )\r\n    }\r\n}\r\n\r\nexport default (Menu)\r\n","import {connect} from 'react-redux'\r\nimport Menu from '../components/Menu'\r\n\r\nimport {showProduct, showCategory} from '../store/page/actions'\r\n\r\nexport default connect(\r\n    state => ({\r\n        isLoggedIn: state.page.isLoggedIn,\r\n        categories: state.page.categories,\r\n        goods: state.page.goods,\r\n    }),\r\n    dispatch => ({\r\n        showProduct: (id) => {\r\n            dispatch(showProduct(id))\r\n        },\r\n        showCategory: (id) => {\r\n            dispatch(showCategory(id))\r\n        },\r\n    })\r\n)(Menu)\r\n","import React from 'react';\r\nimport { Table, Button, ButtonToolbar, Modal } from 'react-bootstrap';\r\n\r\nclass Product extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            confirm: false,\r\n        }\r\n    }\r\n\r\n    hideConfirm () {\r\n        this.setState({confirm: false})\r\n    }\r\n\r\n    showConfirm () {\r\n        this.setState({confirm: true})\r\n    }\r\n\r\n    del () {\r\n        this.setState({confirm: false})\r\n        this.props.delProduct(this.props.currentProdId)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentProdId,\r\n            categories,\r\n            goods,\r\n            editProduct,\r\n        } = this.props\r\n\r\n        const prod = goods[currentProdId]\r\n\r\n        return (\r\n            <div>\r\n                <h3>Карточка товара</h3>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Характеристика</th>\r\n                        <th>Значение</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Наименование</td>\r\n                        <td>{prod.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Цена</td>\r\n                        <td>{prod.price}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Срок годности</td>\r\n                        <td>{prod.expirationDate}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Категория</td>\r\n                        <td>{categories[prod.category].name}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <ButtonToolbar>\r\n                    <Button variant=\"success\" size=\"sm\" onClick={editProduct} style={{marginRight: '20px'}}>Редактировать</Button>\r\n                    <Button variant='danger' size=\"sm\" onClick={this.showConfirm.bind(this)}>Удалить</Button>\r\n                </ButtonToolbar>\r\n                <Modal\r\n                    show={this.state.confirm}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Удалить товар?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.hideConfirm.bind(this)}>Отмена</Button>\r\n                        <Button variant=\"danger\" onClick={this.del.bind(this)}>Удалить</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default (Product)\r\n\r\n","import {connect} from 'react-redux'\r\nimport Product from '../components/Product'\r\n\r\nimport {closeModal, delProd, openModal} from '../store/page/actions'\r\nimport {EDIT_PRODUCT_MODAL} from '../constants/Modals';\r\n\r\nexport default connect(\r\n    state => ({\r\n        currentProdId: state.page.currentProdId,\r\n        categories: state.page.categories,\r\n        goods: state.page.goods,\r\n    }),\r\n    dispatch => ({\r\n        editProduct: () => {\r\n            dispatch(openModal(EDIT_PRODUCT_MODAL))\r\n        },\r\n        delProduct: (id) => {\r\n            dispatch(closeModal())\r\n            dispatch(delProd(id))\r\n        },\r\n    })\r\n)(Product)\r\n","import React from 'react';\r\nimport { Table, Button, ButtonToolbar, Modal } from 'react-bootstrap';\r\n\r\nclass Category extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            confirm: false,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            currentCatId,\r\n            categories,\r\n            editCategory,\r\n            delCategory,\r\n        } = this.props\r\n\r\n        const cat = categories[currentCatId]\r\n\r\n        return (\r\n            <div>\r\n                <h3>Карточка категории</h3>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Характеристика</th>\r\n                        <th>Значение</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>Наименование</td>\r\n                        <td>{cat.name}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <ButtonToolbar >\r\n                    <Button variant=\"success\" size=\"sm\" onClick={editCategory} style={{marginRight: '20px'}}>Редактировать</Button>\r\n                    <Button variant='danger' size=\"sm\" onClick={() => this.setState({confirm: true})}>Удалить</Button>\r\n                </ButtonToolbar>\r\n                <Modal\r\n                    show={this.state.confirm}\r\n                    aria-labelledby=\"contained-modal-title-vcenter\"\r\n                    centered\r\n                >\r\n                    <Modal.Header>\r\n                        <Modal.Title>Удалить категорию?</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => {this.setState({confirm: false})}}>Отмена</Button>\r\n                        <Button variant=\"danger\" onClick={() => {\r\n                            this.setState({confirm: false})\r\n                            delCategory(currentCatId)\r\n                        }}>Удалить</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default (Category)\r\n\r\n","import {connect} from 'react-redux'\r\nimport Category from '../components/Category'\r\n\r\nimport {closeModal, delCat, openModal} from '../store/page/actions'\r\nimport {EDIT_CATEGORY_MODAL} from '../constants/Modals';\r\n\r\nexport default connect(\r\n    state => ({\r\n        currentCatId: state.page.currentCatId,\r\n        categories: state.page.categories,\r\n    }),\r\n    dispatch => ({\r\n        editCategory: () => {\r\n            dispatch(openModal(EDIT_CATEGORY_MODAL))\r\n        },\r\n        delCategory: (id) => {\r\n            dispatch(closeModal())\r\n            dispatch(delCat(id))\r\n        },\r\n    })\r\n)(Category)\r\n","import React from 'react';\r\nimport { Container, Navbar, Nav, Row, Col} from 'react-bootstrap';\r\nimport Modals from '../../containers/Modals'\r\nimport Menu from '../../containers/Menu'\r\nimport Product from '../../containers/Product';\r\nimport Category from '../../containers/Category';\r\nimport {LOGIN_MODAL} from '../../constants/Modals';\r\n\r\nclass Catalog extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n        const {currentProdId, currentCatId, openModal, logout, newCategory, newProduct} = this.props\r\n\r\n        return (\r\n            <Container fluid=\"true\">\r\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n                    <Navbar.Brand> Каталог товаров</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        {!this.props.isLoggedIn &&<Nav className=\"mr-auto\">\r\n                             <Nav.Link onClick={() => {openModal(LOGIN_MODAL)}}>Войти</Nav.Link>\r\n                         </Nav>}\r\n                        {this.props.isLoggedIn &&<Nav className=\"mr-auto\">\r\n                            <Nav.Link onClick={newCategory}>Добавить категорию</Nav.Link>\r\n                            <Nav.Link onClick={newProduct}>Добавить товар</Nav.Link>\r\n                            <Nav.Link onClick={logout}>Выйти</Nav.Link>\r\n                        </Nav>}\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                {this.props.isLoggedIn &&\r\n                    <Row>\r\n                        <Col md={4}>\r\n                            <Menu/>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            {currentProdId && <Product/>}\r\n                            {currentCatId && <Category/>}\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                {!this.props.isLoggedIn &&\r\n                    <Row>\r\n                        <div className=\"d-block mx-auto\" style={{textAlign: 'center', padding: '100px 10px'}}>Для просмотра каталога неободимо войти в приложение</div>\r\n                    </Row>\r\n                }\r\n\r\n                <Modals />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default (Catalog)\r\n\r\n","import {connect} from 'react-redux'\r\nimport Catalog from '../components/Catalog'\r\n\r\nimport {openModal, logout, newProduct, newCategory} from '../store/page/actions'\r\nimport {EDIT_CATEGORY_MODAL, EDIT_PRODUCT_MODAL} from \"../constants/Modals\";\r\n\r\nexport default connect(\r\n    state => ({\r\n        isLoggedIn: state.page.isLoggedIn,\r\n        currentProdId: state.page.currentProdId,\r\n        currentCatId: state.page.currentCatId,\r\n    }),\r\n    dispatch => ({\r\n        openModal: (id) => {\r\n            dispatch(openModal(id))\r\n        },\r\n        logout: () => {\r\n            dispatch(logout())\r\n        },\r\n        newCategory: () => {\r\n            dispatch(newCategory())\r\n            dispatch(openModal(EDIT_CATEGORY_MODAL))\r\n        },\r\n        newProduct: () => {\r\n            dispatch(newProduct())\r\n            dispatch(openModal(EDIT_PRODUCT_MODAL))\r\n        },\r\n    })\r\n)(Catalog)\r\n","import React from 'react';\nimport Catalog from '../containers/Catalog';\n\n\nclass App extends React.Component {\n\n    componentWillMount() {\n\n        this.props.initFakeApi();\n    }\n\n    render() {\n        return (\n            <Catalog/>\n        );\n    }\n}\n\nexport default App;\n","import {connect} from 'react-redux'\r\nimport App from '../components/App'\r\n\r\nimport {initFakeApi} from '../store/page/actions'\r\n\r\n\r\nexport default connect(\r\n    state => ({\r\n    }),\r\n    dispatch => ({\r\n        initFakeApi: () => {\r\n            dispatch(initFakeApi())\r\n        },\r\n    })\r\n)(App)\r\n","import {\n    LOGIN_REQUEST,\n} from './../../constants/Page'\nimport {\n    ADD_CATEGORY_SUCCESS,\n    CLOSE_MODAL,\n    DEL_CATEGORY_SUCCESS,\n    GET_CATEGORIES_SUCCESS,\n    GET_GOODS_SUCCESS,\n    LOGOUT,\n    OPEN_MODAL,\n    SAVE_CATEGORY_SUCCESS,\n    SHOW_CATEGORY,\n    SHOW_PRODUCT,\n    ADD_PRODUCT_SUCCESS,\n    SAVE_PRODUCT_SUCCESS,\n    DEL_PRODUCT_SUCCESS, NEW_PRODUCT, NEW_CATEGORY\n} from '../../constants/Page';\n\nconst initialState = {\n    isLoggedIn: false,\n    goods: null,\n    categories: null,\n    currentProdId: null,\n    currentCatId: null,\n    modal: null,\n}\n\nexport default function page(state = initialState, action) {\n    switch(action.type) {\n\n        case LOGIN_REQUEST:\n        {\n            return {\n                ...state,\n                isLoggedIn: true,\n            }\n        }\n\n        case LOGOUT:\n        {\n            return {\n                ...state,\n                isLoggedIn: false,\n            }\n        }\n\n        case SHOW_PRODUCT:\n        {\n            return {\n                ...state,\n                newCat: false,\n                currentProdId: action.payload,\n                currentCatId: null,\n            }\n        }\n\n        case SHOW_CATEGORY:\n        {\n            return {\n                ...state,\n                newCat: false,\n                currentCatId: action.payload,\n                currentProdId: null,\n            }\n        }\n\n        case NEW_CATEGORY:\n        {\n            return {\n                ...state,\n                currentCatId: null,\n                currentProdId: null,\n            }\n        }\n\n        case NEW_PRODUCT:\n        {\n            return {\n                ...state,\n                currentCatId: null,\n                currentProdId: null,\n            }\n        }\n\n        case OPEN_MODAL:\n        {\n            return {\n                ...state,\n                modal: action.payload,\n            }\n        }\n\n        case CLOSE_MODAL:\n        {\n            return {\n                ...state,\n                modal: null,\n            }\n        }\n\n        case GET_CATEGORIES_SUCCESS:\n        case ADD_CATEGORY_SUCCESS:\n        case SAVE_CATEGORY_SUCCESS: {\n            return {\n                ...state,\n                categories: action.payload,\n            }\n        }\n\n        case DEL_CATEGORY_SUCCESS:\n        {\n            return {\n                ...state,\n                categories: action.payload['cats'],\n                goods: action.payload['goods'],\n                currentCatId: null,\n            }\n        }\n\n        case GET_GOODS_SUCCESS:\n        case ADD_PRODUCT_SUCCESS:\n        case SAVE_PRODUCT_SUCCESS: {\n            return {\n                ...state,\n                goods: action.payload,\n            }\n        }\n\n        case DEL_PRODUCT_SUCCESS:\n        {\n            return {\n                ...state,\n                goods: action.payload,\n                currentProdId: null,\n            }\n        }\n\n        default: {\n            return state\n        }\n    }\n}\n","import {combineReducers} from 'redux'\nimport page from './page/reducer'\n\nexport default combineReducers({\n    page,\n})\n","import {applyMiddleware, compose, createStore} from 'redux'\nimport {createLogger} from 'redux-logger'\nimport reduxThunk from 'redux-thunk'\n\nimport reducer from './reducer'\n\nconst devtools = typeof window !== 'undefined' && window.devToolsExtension\n    ? window.devToolsExtension\n    : () => fn => fn\n\nconst configureStore = (initialState) => {\n\n    const enhancers = [\n        applyMiddleware(\n            reduxThunk,\n            createLogger({\n                diff: true,\n                collapsed: true,\n            }),\n        ),\n        devtools({\n            maxAge: 5000\n        }),\n    ]\n\n    const store = createStore(reducer, initialState, compose(...enhancers))\n    return store\n}\n\nexport default configureStore\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {Provider} from 'react-redux'\n\nimport App from './containers/App'\nimport configureStore from './store/configure'\n\nconst store = configureStore()\n\n\nrender(<Provider store={store}>\n    <App />\n    </Provider>, document.getElementById('root'),\n)\n"],"sourceRoot":""}